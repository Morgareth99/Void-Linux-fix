#!/usr/bin/env raku
use v6;
use Void::Utils;
use X::Void::XBPS;


# -----------------------------------------------------------------------------
# version
# -----------------------------------------------------------------------------

multi sub MAIN(Bool:D :version($)! where .so --> Nil)
{
    printf("v%s\n", $Void::Utils::VERSION);
    exit(0);
}


# -----------------------------------------------------------------------------
# voidstrap
# -----------------------------------------------------------------------------

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :@repository! where .so,
    Bool:D :ignore-conf-repos($)! where .so,
    *@pkg ($, *@)
    --> Nil
)
{
    Void::Utils.voidstrap(
        $chroot-dir,
        :@repository,
        :ignore-conf-repos,
        |@pkg
    );
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :@repository! where .so,
    Bool :ignore-conf-repos($),
    *@pkg ($, *@)
    --> Nil
)
{
    Void::Utils.voidstrap(
        $chroot-dir,
        :@repository,
        |@pkg
    );
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    Str:D :$repository! where .so,
    Bool:D :ignore-conf-repos($)! where .so,
    *@pkg ($, *@)
    --> Nil
)
{
    my @repository = $repository;
    Void::Utils.voidstrap(
        $chroot-dir,
        :@repository,
        :ignore-conf-repos,
        |@pkg
    );
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    Str:D :$repository! where .so,
    Bool :ignore-conf-repos($),
    *@pkg ($, *@)
    --> Nil
)
{
    my @repository = $repository;
    Void::Utils.voidstrap(
        $chroot-dir,
        :@repository,
        |@pkg
    );
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :repository(@),
    Bool:D :ignore-conf-repos($)! where .so,
    *@pkg ($, *@)
    --> Nil
)
{
    die(X::Void::XBPS::IgnoreConfRepos.new);
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :repository($),
    Bool:D :ignore-conf-repos($)! where .so,
    *@pkg ($, *@)
    --> Nil
)
{
    die(X::Void::XBPS::IgnoreConfRepos.new);
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :repository(@),
    Bool :ignore-conf-repos($),
    *@pkg ($, *@)
    --> Nil
)
{
    Void::Utils.voidstrap(
        $chroot-dir,
        |@pkg
    );
}

multi sub MAIN(
    Str:D $chroot-dir where .so,
    :repository($),
    Bool :ignore-conf-repos($),
    *@pkg ($, *@)
    --> Nil
)
{
    Void::Utils.voidstrap(
        $chroot-dir,
        |@pkg
    );
}


# -----------------------------------------------------------------------------
# usage
# -----------------------------------------------------------------------------

sub USAGE(--> Nil)
{
    constant $HELP = q:to/EOF/.trim;
    Usage:
      voidstrap [--repository=<repository>]
                [--ignore-conf-repos]
                <chroot-dir> <pkg> [<pkg> <pkg>..]
      voidstrap /mnt base-system grub

    Options:
      -h, --help
        Print this help message
      --repository=<repository>
        Location of Void package repository (prioritized)
      --ignore-conf-repos
        Only honor repositories specified on cmdline
      --version
        Print version and exit
    EOF
    say($HELP);
}

# vim: set filetype=raku foldmethod=marker foldlevel=0:
